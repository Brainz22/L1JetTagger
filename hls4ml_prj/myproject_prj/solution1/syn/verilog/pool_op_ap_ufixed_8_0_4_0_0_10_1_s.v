// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pool_op_ap_ufixed_8_0_4_0_0_10_1_s (
        ap_clk,
        ap_rst,
        x_0_V_read,
        x_1_V_read,
        x_2_V_read,
        x_3_V_read,
        x_4_V_read,
        x_5_V_read,
        x_6_V_read,
        x_7_V_read,
        x_8_V_read,
        x_9_V_read,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [7:0] x_0_V_read;
input  [7:0] x_1_V_read;
input  [7:0] x_2_V_read;
input  [7:0] x_3_V_read;
input  [7:0] x_4_V_read;
input  [7:0] x_5_V_read;
input  [7:0] x_6_V_read;
input  [7:0] x_7_V_read;
input  [7:0] x_8_V_read;
input  [7:0] x_9_V_read;
output  [4:0] ap_return;
input   ap_ce;

reg[4:0] ap_return;

reg   [7:0] x_9_V_read_1_reg_430;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] x_8_V_read_1_reg_436;
reg   [7:0] x_7_V_read_1_reg_442;
reg   [7:0] x_6_V_read_1_reg_448;
wire   [7:0] select_ln340_62_fu_270_p3;
reg   [7:0] select_ln340_62_reg_454;
wire   [7:0] add_ln703_8_fu_391_p2;
reg   [7:0] add_ln703_8_reg_460;
reg   [0:0] tmp_255_reg_465;
wire    ap_block_pp0_stage0;
wire   [8:0] zext_ln703_1_fu_102_p1;
wire   [8:0] zext_ln703_fu_98_p1;
wire   [8:0] add_ln1192_fu_106_p2;
wire   [0:0] tmp_fu_118_p3;
wire   [7:0] add_ln703_fu_112_p2;
wire   [7:0] select_ln340_fu_126_p3;
wire   [8:0] zext_ln703_3_fu_138_p1;
wire   [8:0] zext_ln703_2_fu_134_p1;
wire   [8:0] add_ln1192_1_fu_142_p2;
wire   [0:0] tmp_248_fu_154_p3;
wire   [7:0] add_ln703_1_fu_148_p2;
wire   [7:0] select_ln340_59_fu_162_p3;
wire   [8:0] zext_ln703_5_fu_174_p1;
wire   [8:0] zext_ln703_4_fu_170_p1;
wire   [8:0] add_ln1192_2_fu_178_p2;
wire   [0:0] tmp_249_fu_190_p3;
wire   [7:0] add_ln703_2_fu_184_p2;
wire   [7:0] select_ln340_60_fu_198_p3;
wire   [8:0] zext_ln703_7_fu_210_p1;
wire   [8:0] zext_ln703_6_fu_206_p1;
wire   [8:0] add_ln1192_3_fu_214_p2;
wire   [0:0] tmp_250_fu_226_p3;
wire   [7:0] add_ln703_3_fu_220_p2;
wire   [7:0] select_ln340_61_fu_234_p3;
wire   [8:0] zext_ln703_9_fu_246_p1;
wire   [8:0] zext_ln703_8_fu_242_p1;
wire   [8:0] add_ln1192_4_fu_250_p2;
wire   [0:0] tmp_251_fu_262_p3;
wire   [7:0] add_ln703_4_fu_256_p2;
wire   [8:0] zext_ln703_11_fu_281_p1;
wire   [8:0] zext_ln703_10_fu_278_p1;
wire   [8:0] add_ln1192_5_fu_284_p2;
wire   [0:0] tmp_252_fu_294_p3;
wire   [7:0] add_ln703_5_fu_290_p2;
wire   [7:0] select_ln340_63_fu_302_p3;
wire   [8:0] zext_ln703_13_fu_314_p1;
wire   [8:0] zext_ln703_12_fu_310_p1;
wire   [8:0] add_ln1192_6_fu_317_p2;
wire   [0:0] tmp_253_fu_328_p3;
wire   [7:0] add_ln703_6_fu_323_p2;
wire   [7:0] select_ln340_64_fu_336_p3;
wire   [8:0] zext_ln703_15_fu_348_p1;
wire   [8:0] zext_ln703_14_fu_344_p1;
wire   [8:0] add_ln1192_7_fu_351_p2;
wire   [0:0] tmp_254_fu_362_p3;
wire   [7:0] add_ln703_7_fu_357_p2;
wire   [7:0] select_ln340_65_fu_370_p3;
wire   [8:0] zext_ln703_17_fu_382_p1;
wire   [8:0] zext_ln703_16_fu_378_p1;
wire   [8:0] add_ln1192_8_fu_385_p2;
wire   [7:0] mul_ln1148_fu_407_p0;
wire   [17:0] mul_ln1148_fu_407_p2;
wire   [4:0] trunc_ln_fu_413_p4;
wire   [4:0] y_V_fu_423_p3;
reg    ap_ce_reg;
reg   [7:0] x_0_V_read_int_reg;
reg   [7:0] x_1_V_read_int_reg;
reg   [7:0] x_2_V_read_int_reg;
reg   [7:0] x_3_V_read_int_reg;
reg   [7:0] x_4_V_read_int_reg;
reg   [7:0] x_5_V_read_int_reg;
reg   [7:0] x_6_V_read_int_reg;
reg   [7:0] x_7_V_read_int_reg;
reg   [7:0] x_8_V_read_int_reg;
reg   [7:0] x_9_V_read_int_reg;
reg   [4:0] ap_return_int_reg;
wire   [17:0] mul_ln1148_fu_407_p00;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add_ln703_8_reg_460 <= add_ln703_8_fu_391_p2;
        select_ln340_62_reg_454 <= select_ln340_62_fu_270_p3;
        tmp_255_reg_465 <= add_ln1192_8_fu_385_p2[32'd8];
        x_6_V_read_1_reg_448 <= x_6_V_read_int_reg;
        x_7_V_read_1_reg_442 <= x_7_V_read_int_reg;
        x_8_V_read_1_reg_436 <= x_8_V_read_int_reg;
        x_9_V_read_1_reg_430 <= x_9_V_read_int_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= y_V_fu_423_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        x_0_V_read_int_reg <= x_0_V_read;
        x_1_V_read_int_reg <= x_1_V_read;
        x_2_V_read_int_reg <= x_2_V_read;
        x_3_V_read_int_reg <= x_3_V_read;
        x_4_V_read_int_reg <= x_4_V_read;
        x_5_V_read_int_reg <= x_5_V_read;
        x_6_V_read_int_reg <= x_6_V_read;
        x_7_V_read_int_reg <= x_7_V_read;
        x_8_V_read_int_reg <= x_8_V_read;
        x_9_V_read_int_reg <= x_9_V_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = y_V_fu_423_p3;
    end
end

assign add_ln1192_1_fu_142_p2 = (zext_ln703_3_fu_138_p1 + zext_ln703_2_fu_134_p1);

assign add_ln1192_2_fu_178_p2 = (zext_ln703_5_fu_174_p1 + zext_ln703_4_fu_170_p1);

assign add_ln1192_3_fu_214_p2 = (zext_ln703_7_fu_210_p1 + zext_ln703_6_fu_206_p1);

assign add_ln1192_4_fu_250_p2 = (zext_ln703_9_fu_246_p1 + zext_ln703_8_fu_242_p1);

assign add_ln1192_5_fu_284_p2 = (zext_ln703_11_fu_281_p1 + zext_ln703_10_fu_278_p1);

assign add_ln1192_6_fu_317_p2 = (zext_ln703_13_fu_314_p1 + zext_ln703_12_fu_310_p1);

assign add_ln1192_7_fu_351_p2 = (zext_ln703_15_fu_348_p1 + zext_ln703_14_fu_344_p1);

assign add_ln1192_8_fu_385_p2 = (zext_ln703_17_fu_382_p1 + zext_ln703_16_fu_378_p1);

assign add_ln1192_fu_106_p2 = (zext_ln703_1_fu_102_p1 + zext_ln703_fu_98_p1);

assign add_ln703_1_fu_148_p2 = (x_2_V_read_int_reg + select_ln340_fu_126_p3);

assign add_ln703_2_fu_184_p2 = (x_3_V_read_int_reg + select_ln340_59_fu_162_p3);

assign add_ln703_3_fu_220_p2 = (x_4_V_read_int_reg + select_ln340_60_fu_198_p3);

assign add_ln703_4_fu_256_p2 = (x_5_V_read_int_reg + select_ln340_61_fu_234_p3);

assign add_ln703_5_fu_290_p2 = (x_6_V_read_1_reg_448 + select_ln340_62_reg_454);

assign add_ln703_6_fu_323_p2 = (x_7_V_read_1_reg_442 + select_ln340_63_fu_302_p3);

assign add_ln703_7_fu_357_p2 = (x_8_V_read_1_reg_436 + select_ln340_64_fu_336_p3);

assign add_ln703_8_fu_391_p2 = (x_9_V_read_1_reg_430 + select_ln340_65_fu_370_p3);

assign add_ln703_fu_112_p2 = (x_0_V_read_int_reg + x_1_V_read_int_reg);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign mul_ln1148_fu_407_p0 = mul_ln1148_fu_407_p00;

assign mul_ln1148_fu_407_p00 = add_ln703_8_reg_460;

assign mul_ln1148_fu_407_p2 = (mul_ln1148_fu_407_p0 * $signed('h19A));

assign select_ln340_59_fu_162_p3 = ((tmp_248_fu_154_p3[0:0] === 1'b1) ? 8'd255 : add_ln703_1_fu_148_p2);

assign select_ln340_60_fu_198_p3 = ((tmp_249_fu_190_p3[0:0] === 1'b1) ? 8'd255 : add_ln703_2_fu_184_p2);

assign select_ln340_61_fu_234_p3 = ((tmp_250_fu_226_p3[0:0] === 1'b1) ? 8'd255 : add_ln703_3_fu_220_p2);

assign select_ln340_62_fu_270_p3 = ((tmp_251_fu_262_p3[0:0] === 1'b1) ? 8'd255 : add_ln703_4_fu_256_p2);

assign select_ln340_63_fu_302_p3 = ((tmp_252_fu_294_p3[0:0] === 1'b1) ? 8'd255 : add_ln703_5_fu_290_p2);

assign select_ln340_64_fu_336_p3 = ((tmp_253_fu_328_p3[0:0] === 1'b1) ? 8'd255 : add_ln703_6_fu_323_p2);

assign select_ln340_65_fu_370_p3 = ((tmp_254_fu_362_p3[0:0] === 1'b1) ? 8'd255 : add_ln703_7_fu_357_p2);

assign select_ln340_fu_126_p3 = ((tmp_fu_118_p3[0:0] === 1'b1) ? 8'd255 : add_ln703_fu_112_p2);

assign tmp_248_fu_154_p3 = add_ln1192_1_fu_142_p2[32'd8];

assign tmp_249_fu_190_p3 = add_ln1192_2_fu_178_p2[32'd8];

assign tmp_250_fu_226_p3 = add_ln1192_3_fu_214_p2[32'd8];

assign tmp_251_fu_262_p3 = add_ln1192_4_fu_250_p2[32'd8];

assign tmp_252_fu_294_p3 = add_ln1192_5_fu_284_p2[32'd8];

assign tmp_253_fu_328_p3 = add_ln1192_6_fu_317_p2[32'd8];

assign tmp_254_fu_362_p3 = add_ln1192_7_fu_351_p2[32'd8];

assign tmp_fu_118_p3 = add_ln1192_fu_106_p2[32'd8];

assign trunc_ln_fu_413_p4 = {{mul_ln1148_fu_407_p2[16:12]}};

assign y_V_fu_423_p3 = ((tmp_255_reg_465[0:0] === 1'b1) ? 5'd25 : trunc_ln_fu_413_p4);

assign zext_ln703_10_fu_278_p1 = select_ln340_62_reg_454;

assign zext_ln703_11_fu_281_p1 = x_6_V_read_1_reg_448;

assign zext_ln703_12_fu_310_p1 = select_ln340_63_fu_302_p3;

assign zext_ln703_13_fu_314_p1 = x_7_V_read_1_reg_442;

assign zext_ln703_14_fu_344_p1 = select_ln340_64_fu_336_p3;

assign zext_ln703_15_fu_348_p1 = x_8_V_read_1_reg_436;

assign zext_ln703_16_fu_378_p1 = select_ln340_65_fu_370_p3;

assign zext_ln703_17_fu_382_p1 = x_9_V_read_1_reg_430;

assign zext_ln703_1_fu_102_p1 = x_1_V_read_int_reg;

assign zext_ln703_2_fu_134_p1 = select_ln340_fu_126_p3;

assign zext_ln703_3_fu_138_p1 = x_2_V_read_int_reg;

assign zext_ln703_4_fu_170_p1 = select_ln340_59_fu_162_p3;

assign zext_ln703_5_fu_174_p1 = x_3_V_read_int_reg;

assign zext_ln703_6_fu_206_p1 = select_ln340_60_fu_198_p3;

assign zext_ln703_7_fu_210_p1 = x_4_V_read_int_reg;

assign zext_ln703_8_fu_242_p1 = select_ln340_61_fu_234_p3;

assign zext_ln703_9_fu_246_p1 = x_5_V_read_int_reg;

assign zext_ln703_fu_98_p1 = x_0_V_read_int_reg;

endmodule //pool_op_ap_ufixed_8_0_4_0_0_10_1_s
