// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module global_pooling1d_cl_ap_ufixed_8_0_4_0_0_ap_fixed_16_6_5_3_0_config8_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        data_5_V_read,
        data_6_V_read,
        data_7_V_read,
        data_8_V_read,
        data_9_V_read,
        data_10_V_read,
        data_11_V_read,
        data_12_V_read,
        data_13_V_read,
        data_14_V_read,
        data_15_V_read,
        data_16_V_read,
        data_17_V_read,
        data_18_V_read,
        data_19_V_read,
        data_20_V_read,
        data_21_V_read,
        data_22_V_read,
        data_23_V_read,
        data_24_V_read,
        data_25_V_read,
        data_26_V_read,
        data_27_V_read,
        data_28_V_read,
        data_29_V_read,
        data_30_V_read,
        data_31_V_read,
        data_32_V_read,
        data_33_V_read,
        data_34_V_read,
        data_35_V_read,
        data_36_V_read,
        data_37_V_read,
        data_38_V_read,
        data_39_V_read,
        data_40_V_read,
        data_41_V_read,
        data_42_V_read,
        data_43_V_read,
        data_44_V_read,
        data_45_V_read,
        data_46_V_read,
        data_47_V_read,
        data_48_V_read,
        data_49_V_read,
        data_50_V_read,
        data_51_V_read,
        data_52_V_read,
        data_53_V_read,
        data_54_V_read,
        data_55_V_read,
        data_56_V_read,
        data_57_V_read,
        data_58_V_read,
        data_59_V_read,
        data_60_V_read,
        data_61_V_read,
        data_62_V_read,
        data_63_V_read,
        data_64_V_read,
        data_65_V_read,
        data_66_V_read,
        data_67_V_read,
        data_68_V_read,
        data_69_V_read,
        data_70_V_read,
        data_71_V_read,
        data_72_V_read,
        data_73_V_read,
        data_74_V_read,
        data_75_V_read,
        data_76_V_read,
        data_77_V_read,
        data_78_V_read,
        data_79_V_read,
        data_80_V_read,
        data_81_V_read,
        data_82_V_read,
        data_83_V_read,
        data_84_V_read,
        data_85_V_read,
        data_86_V_read,
        data_87_V_read,
        data_88_V_read,
        data_89_V_read,
        data_90_V_read,
        data_91_V_read,
        data_92_V_read,
        data_93_V_read,
        data_94_V_read,
        data_95_V_read,
        data_96_V_read,
        data_97_V_read,
        data_98_V_read,
        data_99_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] data_0_V_read;
input  [7:0] data_1_V_read;
input  [7:0] data_2_V_read;
input  [7:0] data_3_V_read;
input  [7:0] data_4_V_read;
input  [7:0] data_5_V_read;
input  [7:0] data_6_V_read;
input  [7:0] data_7_V_read;
input  [7:0] data_8_V_read;
input  [7:0] data_9_V_read;
input  [7:0] data_10_V_read;
input  [7:0] data_11_V_read;
input  [7:0] data_12_V_read;
input  [7:0] data_13_V_read;
input  [7:0] data_14_V_read;
input  [7:0] data_15_V_read;
input  [7:0] data_16_V_read;
input  [7:0] data_17_V_read;
input  [7:0] data_18_V_read;
input  [7:0] data_19_V_read;
input  [7:0] data_20_V_read;
input  [7:0] data_21_V_read;
input  [7:0] data_22_V_read;
input  [7:0] data_23_V_read;
input  [7:0] data_24_V_read;
input  [7:0] data_25_V_read;
input  [7:0] data_26_V_read;
input  [7:0] data_27_V_read;
input  [7:0] data_28_V_read;
input  [7:0] data_29_V_read;
input  [7:0] data_30_V_read;
input  [7:0] data_31_V_read;
input  [7:0] data_32_V_read;
input  [7:0] data_33_V_read;
input  [7:0] data_34_V_read;
input  [7:0] data_35_V_read;
input  [7:0] data_36_V_read;
input  [7:0] data_37_V_read;
input  [7:0] data_38_V_read;
input  [7:0] data_39_V_read;
input  [7:0] data_40_V_read;
input  [7:0] data_41_V_read;
input  [7:0] data_42_V_read;
input  [7:0] data_43_V_read;
input  [7:0] data_44_V_read;
input  [7:0] data_45_V_read;
input  [7:0] data_46_V_read;
input  [7:0] data_47_V_read;
input  [7:0] data_48_V_read;
input  [7:0] data_49_V_read;
input  [7:0] data_50_V_read;
input  [7:0] data_51_V_read;
input  [7:0] data_52_V_read;
input  [7:0] data_53_V_read;
input  [7:0] data_54_V_read;
input  [7:0] data_55_V_read;
input  [7:0] data_56_V_read;
input  [7:0] data_57_V_read;
input  [7:0] data_58_V_read;
input  [7:0] data_59_V_read;
input  [7:0] data_60_V_read;
input  [7:0] data_61_V_read;
input  [7:0] data_62_V_read;
input  [7:0] data_63_V_read;
input  [7:0] data_64_V_read;
input  [7:0] data_65_V_read;
input  [7:0] data_66_V_read;
input  [7:0] data_67_V_read;
input  [7:0] data_68_V_read;
input  [7:0] data_69_V_read;
input  [7:0] data_70_V_read;
input  [7:0] data_71_V_read;
input  [7:0] data_72_V_read;
input  [7:0] data_73_V_read;
input  [7:0] data_74_V_read;
input  [7:0] data_75_V_read;
input  [7:0] data_76_V_read;
input  [7:0] data_77_V_read;
input  [7:0] data_78_V_read;
input  [7:0] data_79_V_read;
input  [7:0] data_80_V_read;
input  [7:0] data_81_V_read;
input  [7:0] data_82_V_read;
input  [7:0] data_83_V_read;
input  [7:0] data_84_V_read;
input  [7:0] data_85_V_read;
input  [7:0] data_86_V_read;
input  [7:0] data_87_V_read;
input  [7:0] data_88_V_read;
input  [7:0] data_89_V_read;
input  [7:0] data_90_V_read;
input  [7:0] data_91_V_read;
input  [7:0] data_92_V_read;
input  [7:0] data_93_V_read;
input  [7:0] data_94_V_read;
input  [7:0] data_95_V_read;
input  [7:0] data_96_V_read;
input  [7:0] data_97_V_read;
input  [7:0] data_98_V_read;
input  [7:0] data_99_V_read;
output  [9:0] ap_return_0;
output  [9:0] ap_return_1;
output  [9:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] ap_return_0;
reg[9:0] ap_return_1;
reg[9:0] ap_return_2;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_pp0_stage0_subdone;
wire   [4:0] grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_return;
reg    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call101;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call101;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call101;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call101;
reg    ap_block_pp0_stage0_11001_ignoreCallOp105;
wire   [4:0] grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_return;
reg    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call102;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call102;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call102;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call102;
reg    ap_block_pp0_stage0_11001_ignoreCallOp106;
wire   [4:0] grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_return;
reg    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call103;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call103;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call103;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call103;
reg    ap_block_pp0_stage0_11001_ignoreCallOp107;
wire   [4:0] grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_return;
reg    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call106;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call106;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call106;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call106;
reg    ap_block_pp0_stage0_11001_ignoreCallOp108;
wire   [4:0] grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_return;
reg    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call109;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call109;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call109;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call109;
reg    ap_block_pp0_stage0_11001_ignoreCallOp109;
wire   [4:0] grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_return;
reg    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call112;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call112;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call112;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call112;
reg    ap_block_pp0_stage0_11001_ignoreCallOp110;
wire   [4:0] grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_return;
reg    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call113;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call113;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call113;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call113;
reg    ap_block_pp0_stage0_11001_ignoreCallOp111;
wire   [4:0] grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_return;
reg    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call114;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call114;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call114;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call114;
reg    ap_block_pp0_stage0_11001_ignoreCallOp112;
wire   [4:0] grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_return;
reg    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call115;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call115;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call115;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call115;
reg    ap_block_pp0_stage0_11001_ignoreCallOp113;
wire   [4:0] grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_return;
reg    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call116;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call116;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call116;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call116;
reg    ap_block_pp0_stage0_11001_ignoreCallOp114;
wire    ap_block_pp0_stage0;
wire   [6:0] res_2_V_write_assign_fu_1058_p3;
wire   [6:0] res_3_V_write_assign_fu_1070_p3;
wire   [6:0] res_4_V_write_assign_fu_1082_p3;
wire   [9:0] zext_ln728_fu_1066_p1;
wire   [9:0] zext_ln728_1_fu_1078_p1;
wire   [9:0] zext_ln728_2_fu_1090_p1;
reg   [9:0] ap_return_0_preg;
reg   [9:0] ap_return_1_preg;
reg   [9:0] ap_return_2_preg;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_return_0_preg = 10'd0;
#0 ap_return_1_preg = 10'd0;
#0 ap_return_2_preg = 10'd0;
end

pool_op_ap_ufixed_8_0_4_0_0_10_1_s grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_0_V_read(data_0_V_read),
    .x_1_V_read(data_10_V_read),
    .x_2_V_read(data_20_V_read),
    .x_3_V_read(data_30_V_read),
    .x_4_V_read(data_40_V_read),
    .x_5_V_read(data_50_V_read),
    .x_6_V_read(data_60_V_read),
    .x_7_V_read(data_70_V_read),
    .x_8_V_read(data_80_V_read),
    .x_9_V_read(data_90_V_read),
    .ap_return(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_return),
    .ap_ce(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_ce)
);

pool_op_ap_ufixed_8_0_4_0_0_10_1_s grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_0_V_read(data_1_V_read),
    .x_1_V_read(data_11_V_read),
    .x_2_V_read(data_21_V_read),
    .x_3_V_read(data_31_V_read),
    .x_4_V_read(data_41_V_read),
    .x_5_V_read(data_51_V_read),
    .x_6_V_read(data_61_V_read),
    .x_7_V_read(data_71_V_read),
    .x_8_V_read(data_81_V_read),
    .x_9_V_read(data_91_V_read),
    .ap_return(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_return),
    .ap_ce(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_ce)
);

pool_op_ap_ufixed_8_0_4_0_0_10_1_s grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_0_V_read(data_2_V_read),
    .x_1_V_read(data_12_V_read),
    .x_2_V_read(data_22_V_read),
    .x_3_V_read(data_32_V_read),
    .x_4_V_read(data_42_V_read),
    .x_5_V_read(data_52_V_read),
    .x_6_V_read(data_62_V_read),
    .x_7_V_read(data_72_V_read),
    .x_8_V_read(data_82_V_read),
    .x_9_V_read(data_92_V_read),
    .ap_return(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_return),
    .ap_ce(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_ce)
);

pool_op_ap_ufixed_8_0_4_0_0_10_1_s grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_0_V_read(data_3_V_read),
    .x_1_V_read(data_13_V_read),
    .x_2_V_read(data_23_V_read),
    .x_3_V_read(data_33_V_read),
    .x_4_V_read(data_43_V_read),
    .x_5_V_read(data_53_V_read),
    .x_6_V_read(data_63_V_read),
    .x_7_V_read(data_73_V_read),
    .x_8_V_read(data_83_V_read),
    .x_9_V_read(data_93_V_read),
    .ap_return(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_return),
    .ap_ce(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_ce)
);

pool_op_ap_ufixed_8_0_4_0_0_10_1_s grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_0_V_read(data_4_V_read),
    .x_1_V_read(data_14_V_read),
    .x_2_V_read(data_24_V_read),
    .x_3_V_read(data_34_V_read),
    .x_4_V_read(data_44_V_read),
    .x_5_V_read(data_54_V_read),
    .x_6_V_read(data_64_V_read),
    .x_7_V_read(data_74_V_read),
    .x_8_V_read(data_84_V_read),
    .x_9_V_read(data_94_V_read),
    .ap_return(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_return),
    .ap_ce(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_ce)
);

pool_op_ap_ufixed_8_0_4_0_0_10_1_s grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_0_V_read(data_5_V_read),
    .x_1_V_read(data_15_V_read),
    .x_2_V_read(data_25_V_read),
    .x_3_V_read(data_35_V_read),
    .x_4_V_read(data_45_V_read),
    .x_5_V_read(data_55_V_read),
    .x_6_V_read(data_65_V_read),
    .x_7_V_read(data_75_V_read),
    .x_8_V_read(data_85_V_read),
    .x_9_V_read(data_95_V_read),
    .ap_return(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_return),
    .ap_ce(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_ce)
);

pool_op_ap_ufixed_8_0_4_0_0_10_1_s grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_0_V_read(data_6_V_read),
    .x_1_V_read(data_16_V_read),
    .x_2_V_read(data_26_V_read),
    .x_3_V_read(data_36_V_read),
    .x_4_V_read(data_46_V_read),
    .x_5_V_read(data_56_V_read),
    .x_6_V_read(data_66_V_read),
    .x_7_V_read(data_76_V_read),
    .x_8_V_read(data_86_V_read),
    .x_9_V_read(data_96_V_read),
    .ap_return(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_return),
    .ap_ce(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_ce)
);

pool_op_ap_ufixed_8_0_4_0_0_10_1_s grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_0_V_read(data_7_V_read),
    .x_1_V_read(data_17_V_read),
    .x_2_V_read(data_27_V_read),
    .x_3_V_read(data_37_V_read),
    .x_4_V_read(data_47_V_read),
    .x_5_V_read(data_57_V_read),
    .x_6_V_read(data_67_V_read),
    .x_7_V_read(data_77_V_read),
    .x_8_V_read(data_87_V_read),
    .x_9_V_read(data_97_V_read),
    .ap_return(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_return),
    .ap_ce(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_ce)
);

pool_op_ap_ufixed_8_0_4_0_0_10_1_s grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_0_V_read(data_8_V_read),
    .x_1_V_read(data_18_V_read),
    .x_2_V_read(data_28_V_read),
    .x_3_V_read(data_38_V_read),
    .x_4_V_read(data_48_V_read),
    .x_5_V_read(data_58_V_read),
    .x_6_V_read(data_68_V_read),
    .x_7_V_read(data_78_V_read),
    .x_8_V_read(data_88_V_read),
    .x_9_V_read(data_98_V_read),
    .ap_return(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_return),
    .ap_ce(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_ce)
);

pool_op_ap_ufixed_8_0_4_0_0_10_1_s grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_0_V_read(data_9_V_read),
    .x_1_V_read(data_19_V_read),
    .x_2_V_read(data_29_V_read),
    .x_3_V_read(data_39_V_read),
    .x_4_V_read(data_49_V_read),
    .x_5_V_read(data_59_V_read),
    .x_6_V_read(data_69_V_read),
    .x_7_V_read(data_79_V_read),
    .x_8_V_read(data_89_V_read),
    .x_9_V_read(data_99_V_read),
    .ap_return(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_return),
    .ap_ce(grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_0_preg[2] <= 1'b0;
        ap_return_0_preg[3] <= 1'b0;
        ap_return_0_preg[4] <= 1'b0;
        ap_return_0_preg[5] <= 1'b0;
        ap_return_0_preg[6] <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
                        ap_return_0_preg[6 : 2] <= zext_ln728_fu_1066_p1[6 : 2];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_1_preg[2] <= 1'b0;
        ap_return_1_preg[3] <= 1'b0;
        ap_return_1_preg[4] <= 1'b0;
        ap_return_1_preg[5] <= 1'b0;
        ap_return_1_preg[6] <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
                        ap_return_1_preg[6 : 2] <= zext_ln728_1_fu_1078_p1[6 : 2];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_2_preg[2] <= 1'b0;
        ap_return_2_preg[3] <= 1'b0;
        ap_return_2_preg[4] <= 1'b0;
        ap_return_2_preg[5] <= 1'b0;
        ap_return_2_preg[6] <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
                        ap_return_2_preg[6 : 2] <= zext_ln728_2_fu_1090_p1[6 : 2];
        end
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_return_0 = zext_ln728_fu_1066_p1;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_return_1 = zext_ln728_1_fu_1078_p1;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_return_2 = zext_ln728_2_fu_1090_p1;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp113) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_ce = 1'b1;
    end else begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp114) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_ce = 1'b1;
    end else begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp105) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_ce = 1'b1;
    end else begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp106) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_ce = 1'b1;
    end else begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp107) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_ce = 1'b1;
    end else begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp108) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_ce = 1'b1;
    end else begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp109) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_ce = 1'b1;
    end else begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp110) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_ce = 1'b1;
    end else begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp111) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_ce = 1'b1;
    end else begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp112) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_ce = 1'b1;
    end else begin
        grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp105 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp106 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp107 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp108 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp109 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp110 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp111 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp112 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp113 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp114 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call101 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call102 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call103 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call106 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call109 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call112 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call113 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call114 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call115 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call116 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call101 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call102 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call103 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call106 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call109 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call112 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call113 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call114 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call115 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call116 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call101 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call102 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call103 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call106 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call109 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call112 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call113 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call114 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call115 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call116 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call101 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call102 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call103 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call106 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call109 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call112 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call113 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call114 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call115 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call116 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign res_2_V_write_assign_fu_1058_p3 = {{grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_return}, {2'd0}};

assign res_3_V_write_assign_fu_1070_p3 = {{grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_return}, {2'd0}};

assign res_4_V_write_assign_fu_1082_p3 = {{grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_return}, {2'd0}};

assign zext_ln728_1_fu_1078_p1 = res_3_V_write_assign_fu_1070_p3;

assign zext_ln728_2_fu_1090_p1 = res_4_V_write_assign_fu_1082_p3;

assign zext_ln728_fu_1066_p1 = res_2_V_write_assign_fu_1058_p3;

always @ (posedge ap_clk) begin
    ap_return_0_preg[1:0] <= 2'b00;
    ap_return_0_preg[9:7] <= 3'b000;
    ap_return_1_preg[1:0] <= 2'b00;
    ap_return_1_preg[9:7] <= 3'b000;
    ap_return_2_preg[1:0] <= 2'b00;
    ap_return_2_preg[9:7] <= 3'b000;
end

endmodule //global_pooling1d_cl_ap_ufixed_8_0_4_0_0_ap_fixed_16_6_5_3_0_config8_s
