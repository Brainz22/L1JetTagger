// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pool_op_ap_ufixed_8_0_4_0_0_10_1_s_HH_
#define _pool_op_ap_ufixed_8_0_4_0_0_10_1_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct pool_op_ap_ufixed_8_0_4_0_0_10_1_s : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<8> > x_0_V_read;
    sc_in< sc_lv<8> > x_1_V_read;
    sc_in< sc_lv<8> > x_2_V_read;
    sc_in< sc_lv<8> > x_3_V_read;
    sc_in< sc_lv<8> > x_4_V_read;
    sc_in< sc_lv<8> > x_5_V_read;
    sc_in< sc_lv<8> > x_6_V_read;
    sc_in< sc_lv<8> > x_7_V_read;
    sc_in< sc_lv<8> > x_8_V_read;
    sc_in< sc_lv<8> > x_9_V_read;
    sc_out< sc_lv<5> > ap_return;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    pool_op_ap_ufixed_8_0_4_0_0_10_1_s(sc_module_name name);
    SC_HAS_PROCESS(pool_op_ap_ufixed_8_0_4_0_0_10_1_s);

    ~pool_op_ap_ufixed_8_0_4_0_0_10_1_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<8> > x_9_V_read_1_reg_430;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<8> > x_8_V_read_1_reg_436;
    sc_signal< sc_lv<8> > x_7_V_read_1_reg_442;
    sc_signal< sc_lv<8> > x_6_V_read_1_reg_448;
    sc_signal< sc_lv<8> > select_ln340_62_fu_270_p3;
    sc_signal< sc_lv<8> > select_ln340_62_reg_454;
    sc_signal< sc_lv<8> > add_ln703_8_fu_391_p2;
    sc_signal< sc_lv<8> > add_ln703_8_reg_460;
    sc_signal< sc_lv<1> > tmp_255_reg_465;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<9> > zext_ln703_1_fu_102_p1;
    sc_signal< sc_lv<9> > zext_ln703_fu_98_p1;
    sc_signal< sc_lv<9> > add_ln1192_fu_106_p2;
    sc_signal< sc_lv<1> > tmp_fu_118_p3;
    sc_signal< sc_lv<8> > add_ln703_fu_112_p2;
    sc_signal< sc_lv<8> > select_ln340_fu_126_p3;
    sc_signal< sc_lv<9> > zext_ln703_3_fu_138_p1;
    sc_signal< sc_lv<9> > zext_ln703_2_fu_134_p1;
    sc_signal< sc_lv<9> > add_ln1192_1_fu_142_p2;
    sc_signal< sc_lv<1> > tmp_248_fu_154_p3;
    sc_signal< sc_lv<8> > add_ln703_1_fu_148_p2;
    sc_signal< sc_lv<8> > select_ln340_59_fu_162_p3;
    sc_signal< sc_lv<9> > zext_ln703_5_fu_174_p1;
    sc_signal< sc_lv<9> > zext_ln703_4_fu_170_p1;
    sc_signal< sc_lv<9> > add_ln1192_2_fu_178_p2;
    sc_signal< sc_lv<1> > tmp_249_fu_190_p3;
    sc_signal< sc_lv<8> > add_ln703_2_fu_184_p2;
    sc_signal< sc_lv<8> > select_ln340_60_fu_198_p3;
    sc_signal< sc_lv<9> > zext_ln703_7_fu_210_p1;
    sc_signal< sc_lv<9> > zext_ln703_6_fu_206_p1;
    sc_signal< sc_lv<9> > add_ln1192_3_fu_214_p2;
    sc_signal< sc_lv<1> > tmp_250_fu_226_p3;
    sc_signal< sc_lv<8> > add_ln703_3_fu_220_p2;
    sc_signal< sc_lv<8> > select_ln340_61_fu_234_p3;
    sc_signal< sc_lv<9> > zext_ln703_9_fu_246_p1;
    sc_signal< sc_lv<9> > zext_ln703_8_fu_242_p1;
    sc_signal< sc_lv<9> > add_ln1192_4_fu_250_p2;
    sc_signal< sc_lv<1> > tmp_251_fu_262_p3;
    sc_signal< sc_lv<8> > add_ln703_4_fu_256_p2;
    sc_signal< sc_lv<9> > zext_ln703_11_fu_281_p1;
    sc_signal< sc_lv<9> > zext_ln703_10_fu_278_p1;
    sc_signal< sc_lv<9> > add_ln1192_5_fu_284_p2;
    sc_signal< sc_lv<1> > tmp_252_fu_294_p3;
    sc_signal< sc_lv<8> > add_ln703_5_fu_290_p2;
    sc_signal< sc_lv<8> > select_ln340_63_fu_302_p3;
    sc_signal< sc_lv<9> > zext_ln703_13_fu_314_p1;
    sc_signal< sc_lv<9> > zext_ln703_12_fu_310_p1;
    sc_signal< sc_lv<9> > add_ln1192_6_fu_317_p2;
    sc_signal< sc_lv<1> > tmp_253_fu_328_p3;
    sc_signal< sc_lv<8> > add_ln703_6_fu_323_p2;
    sc_signal< sc_lv<8> > select_ln340_64_fu_336_p3;
    sc_signal< sc_lv<9> > zext_ln703_15_fu_348_p1;
    sc_signal< sc_lv<9> > zext_ln703_14_fu_344_p1;
    sc_signal< sc_lv<9> > add_ln1192_7_fu_351_p2;
    sc_signal< sc_lv<1> > tmp_254_fu_362_p3;
    sc_signal< sc_lv<8> > add_ln703_7_fu_357_p2;
    sc_signal< sc_lv<8> > select_ln340_65_fu_370_p3;
    sc_signal< sc_lv<9> > zext_ln703_17_fu_382_p1;
    sc_signal< sc_lv<9> > zext_ln703_16_fu_378_p1;
    sc_signal< sc_lv<9> > add_ln1192_8_fu_385_p2;
    sc_signal< sc_lv<8> > mul_ln1148_fu_407_p0;
    sc_signal< sc_lv<18> > mul_ln1148_fu_407_p2;
    sc_signal< sc_lv<5> > trunc_ln_fu_413_p4;
    sc_signal< sc_lv<5> > y_V_fu_423_p3;
    sc_signal< sc_logic > ap_ce_reg;
    sc_signal< sc_lv<8> > x_0_V_read_int_reg;
    sc_signal< sc_lv<8> > x_1_V_read_int_reg;
    sc_signal< sc_lv<8> > x_2_V_read_int_reg;
    sc_signal< sc_lv<8> > x_3_V_read_int_reg;
    sc_signal< sc_lv<8> > x_4_V_read_int_reg;
    sc_signal< sc_lv<8> > x_5_V_read_int_reg;
    sc_signal< sc_lv<8> > x_6_V_read_int_reg;
    sc_signal< sc_lv<8> > x_7_V_read_int_reg;
    sc_signal< sc_lv<8> > x_8_V_read_int_reg;
    sc_signal< sc_lv<8> > x_9_V_read_int_reg;
    sc_signal< sc_lv<5> > ap_return_int_reg;
    sc_signal< sc_lv<18> > mul_ln1148_fu_407_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<18> ap_const_lv18_19A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<5> ap_const_lv5_19;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1192_1_fu_142_p2();
    void thread_add_ln1192_2_fu_178_p2();
    void thread_add_ln1192_3_fu_214_p2();
    void thread_add_ln1192_4_fu_250_p2();
    void thread_add_ln1192_5_fu_284_p2();
    void thread_add_ln1192_6_fu_317_p2();
    void thread_add_ln1192_7_fu_351_p2();
    void thread_add_ln1192_8_fu_385_p2();
    void thread_add_ln1192_fu_106_p2();
    void thread_add_ln703_1_fu_148_p2();
    void thread_add_ln703_2_fu_184_p2();
    void thread_add_ln703_3_fu_220_p2();
    void thread_add_ln703_4_fu_256_p2();
    void thread_add_ln703_5_fu_290_p2();
    void thread_add_ln703_6_fu_323_p2();
    void thread_add_ln703_7_fu_357_p2();
    void thread_add_ln703_8_fu_391_p2();
    void thread_add_ln703_fu_112_p2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_return();
    void thread_mul_ln1148_fu_407_p0();
    void thread_mul_ln1148_fu_407_p00();
    void thread_mul_ln1148_fu_407_p2();
    void thread_select_ln340_59_fu_162_p3();
    void thread_select_ln340_60_fu_198_p3();
    void thread_select_ln340_61_fu_234_p3();
    void thread_select_ln340_62_fu_270_p3();
    void thread_select_ln340_63_fu_302_p3();
    void thread_select_ln340_64_fu_336_p3();
    void thread_select_ln340_65_fu_370_p3();
    void thread_select_ln340_fu_126_p3();
    void thread_tmp_248_fu_154_p3();
    void thread_tmp_249_fu_190_p3();
    void thread_tmp_250_fu_226_p3();
    void thread_tmp_251_fu_262_p3();
    void thread_tmp_252_fu_294_p3();
    void thread_tmp_253_fu_328_p3();
    void thread_tmp_254_fu_362_p3();
    void thread_tmp_fu_118_p3();
    void thread_trunc_ln_fu_413_p4();
    void thread_y_V_fu_423_p3();
    void thread_zext_ln703_10_fu_278_p1();
    void thread_zext_ln703_11_fu_281_p1();
    void thread_zext_ln703_12_fu_310_p1();
    void thread_zext_ln703_13_fu_314_p1();
    void thread_zext_ln703_14_fu_344_p1();
    void thread_zext_ln703_15_fu_348_p1();
    void thread_zext_ln703_16_fu_378_p1();
    void thread_zext_ln703_17_fu_382_p1();
    void thread_zext_ln703_1_fu_102_p1();
    void thread_zext_ln703_2_fu_134_p1();
    void thread_zext_ln703_3_fu_138_p1();
    void thread_zext_ln703_4_fu_170_p1();
    void thread_zext_ln703_5_fu_174_p1();
    void thread_zext_ln703_6_fu_206_p1();
    void thread_zext_ln703_7_fu_210_p1();
    void thread_zext_ln703_8_fu_242_p1();
    void thread_zext_ln703_9_fu_246_p1();
    void thread_zext_ln703_fu_98_p1();
};

}

using namespace ap_rtl;

#endif
