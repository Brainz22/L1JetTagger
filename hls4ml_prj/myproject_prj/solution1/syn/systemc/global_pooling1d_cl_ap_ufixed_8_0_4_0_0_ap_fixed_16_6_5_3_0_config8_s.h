// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _global_pooling1d_cl_ap_ufixed_8_0_4_0_0_ap_fixed_16_6_5_3_0_config8_s_HH_
#define _global_pooling1d_cl_ap_ufixed_8_0_4_0_0_ap_fixed_16_6_5_3_0_config8_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pool_op_ap_ufixed_8_0_4_0_0_10_1_s.h"

namespace ap_rtl {

struct global_pooling1d_cl_ap_ufixed_8_0_4_0_0_ap_fixed_16_6_5_3_0_config8_s : public sc_module {
    // Port declarations 110
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > data_0_V_read;
    sc_in< sc_lv<8> > data_1_V_read;
    sc_in< sc_lv<8> > data_2_V_read;
    sc_in< sc_lv<8> > data_3_V_read;
    sc_in< sc_lv<8> > data_4_V_read;
    sc_in< sc_lv<8> > data_5_V_read;
    sc_in< sc_lv<8> > data_6_V_read;
    sc_in< sc_lv<8> > data_7_V_read;
    sc_in< sc_lv<8> > data_8_V_read;
    sc_in< sc_lv<8> > data_9_V_read;
    sc_in< sc_lv<8> > data_10_V_read;
    sc_in< sc_lv<8> > data_11_V_read;
    sc_in< sc_lv<8> > data_12_V_read;
    sc_in< sc_lv<8> > data_13_V_read;
    sc_in< sc_lv<8> > data_14_V_read;
    sc_in< sc_lv<8> > data_15_V_read;
    sc_in< sc_lv<8> > data_16_V_read;
    sc_in< sc_lv<8> > data_17_V_read;
    sc_in< sc_lv<8> > data_18_V_read;
    sc_in< sc_lv<8> > data_19_V_read;
    sc_in< sc_lv<8> > data_20_V_read;
    sc_in< sc_lv<8> > data_21_V_read;
    sc_in< sc_lv<8> > data_22_V_read;
    sc_in< sc_lv<8> > data_23_V_read;
    sc_in< sc_lv<8> > data_24_V_read;
    sc_in< sc_lv<8> > data_25_V_read;
    sc_in< sc_lv<8> > data_26_V_read;
    sc_in< sc_lv<8> > data_27_V_read;
    sc_in< sc_lv<8> > data_28_V_read;
    sc_in< sc_lv<8> > data_29_V_read;
    sc_in< sc_lv<8> > data_30_V_read;
    sc_in< sc_lv<8> > data_31_V_read;
    sc_in< sc_lv<8> > data_32_V_read;
    sc_in< sc_lv<8> > data_33_V_read;
    sc_in< sc_lv<8> > data_34_V_read;
    sc_in< sc_lv<8> > data_35_V_read;
    sc_in< sc_lv<8> > data_36_V_read;
    sc_in< sc_lv<8> > data_37_V_read;
    sc_in< sc_lv<8> > data_38_V_read;
    sc_in< sc_lv<8> > data_39_V_read;
    sc_in< sc_lv<8> > data_40_V_read;
    sc_in< sc_lv<8> > data_41_V_read;
    sc_in< sc_lv<8> > data_42_V_read;
    sc_in< sc_lv<8> > data_43_V_read;
    sc_in< sc_lv<8> > data_44_V_read;
    sc_in< sc_lv<8> > data_45_V_read;
    sc_in< sc_lv<8> > data_46_V_read;
    sc_in< sc_lv<8> > data_47_V_read;
    sc_in< sc_lv<8> > data_48_V_read;
    sc_in< sc_lv<8> > data_49_V_read;
    sc_in< sc_lv<8> > data_50_V_read;
    sc_in< sc_lv<8> > data_51_V_read;
    sc_in< sc_lv<8> > data_52_V_read;
    sc_in< sc_lv<8> > data_53_V_read;
    sc_in< sc_lv<8> > data_54_V_read;
    sc_in< sc_lv<8> > data_55_V_read;
    sc_in< sc_lv<8> > data_56_V_read;
    sc_in< sc_lv<8> > data_57_V_read;
    sc_in< sc_lv<8> > data_58_V_read;
    sc_in< sc_lv<8> > data_59_V_read;
    sc_in< sc_lv<8> > data_60_V_read;
    sc_in< sc_lv<8> > data_61_V_read;
    sc_in< sc_lv<8> > data_62_V_read;
    sc_in< sc_lv<8> > data_63_V_read;
    sc_in< sc_lv<8> > data_64_V_read;
    sc_in< sc_lv<8> > data_65_V_read;
    sc_in< sc_lv<8> > data_66_V_read;
    sc_in< sc_lv<8> > data_67_V_read;
    sc_in< sc_lv<8> > data_68_V_read;
    sc_in< sc_lv<8> > data_69_V_read;
    sc_in< sc_lv<8> > data_70_V_read;
    sc_in< sc_lv<8> > data_71_V_read;
    sc_in< sc_lv<8> > data_72_V_read;
    sc_in< sc_lv<8> > data_73_V_read;
    sc_in< sc_lv<8> > data_74_V_read;
    sc_in< sc_lv<8> > data_75_V_read;
    sc_in< sc_lv<8> > data_76_V_read;
    sc_in< sc_lv<8> > data_77_V_read;
    sc_in< sc_lv<8> > data_78_V_read;
    sc_in< sc_lv<8> > data_79_V_read;
    sc_in< sc_lv<8> > data_80_V_read;
    sc_in< sc_lv<8> > data_81_V_read;
    sc_in< sc_lv<8> > data_82_V_read;
    sc_in< sc_lv<8> > data_83_V_read;
    sc_in< sc_lv<8> > data_84_V_read;
    sc_in< sc_lv<8> > data_85_V_read;
    sc_in< sc_lv<8> > data_86_V_read;
    sc_in< sc_lv<8> > data_87_V_read;
    sc_in< sc_lv<8> > data_88_V_read;
    sc_in< sc_lv<8> > data_89_V_read;
    sc_in< sc_lv<8> > data_90_V_read;
    sc_in< sc_lv<8> > data_91_V_read;
    sc_in< sc_lv<8> > data_92_V_read;
    sc_in< sc_lv<8> > data_93_V_read;
    sc_in< sc_lv<8> > data_94_V_read;
    sc_in< sc_lv<8> > data_95_V_read;
    sc_in< sc_lv<8> > data_96_V_read;
    sc_in< sc_lv<8> > data_97_V_read;
    sc_in< sc_lv<8> > data_98_V_read;
    sc_in< sc_lv<8> > data_99_V_read;
    sc_out< sc_lv<10> > ap_return_0;
    sc_out< sc_lv<10> > ap_return_1;
    sc_out< sc_lv<10> > ap_return_2;


    // Module declarations
    global_pooling1d_cl_ap_ufixed_8_0_4_0_0_ap_fixed_16_6_5_3_0_config8_s(sc_module_name name);
    SC_HAS_PROCESS(global_pooling1d_cl_ap_ufixed_8_0_4_0_0_ap_fixed_16_6_5_3_0_config8_s);

    ~global_pooling1d_cl_ap_ufixed_8_0_4_0_0_ap_fixed_16_6_5_3_0_config8_s();

    sc_trace_file* mVcdFile;

    pool_op_ap_ufixed_8_0_4_0_0_10_1_s* grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818;
    pool_op_ap_ufixed_8_0_4_0_0_10_1_s* grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842;
    pool_op_ap_ufixed_8_0_4_0_0_10_1_s* grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866;
    pool_op_ap_ufixed_8_0_4_0_0_10_1_s* grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890;
    pool_op_ap_ufixed_8_0_4_0_0_10_1_s* grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914;
    pool_op_ap_ufixed_8_0_4_0_0_10_1_s* grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938;
    pool_op_ap_ufixed_8_0_4_0_0_10_1_s* grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962;
    pool_op_ap_ufixed_8_0_4_0_0_10_1_s* grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986;
    pool_op_ap_ufixed_8_0_4_0_0_10_1_s* grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010;
    pool_op_ap_ufixed_8_0_4_0_0_10_1_s* grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<5> > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_return;
    sc_signal< sc_logic > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_ce;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0_ignore_call101;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1_ignore_call101;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2_ignore_call101;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3_ignore_call101;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp105;
    sc_signal< sc_lv<5> > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_return;
    sc_signal< sc_logic > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_ce;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0_ignore_call102;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1_ignore_call102;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2_ignore_call102;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3_ignore_call102;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp106;
    sc_signal< sc_lv<5> > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_return;
    sc_signal< sc_logic > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_ce;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0_ignore_call103;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1_ignore_call103;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2_ignore_call103;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3_ignore_call103;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp107;
    sc_signal< sc_lv<5> > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_return;
    sc_signal< sc_logic > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_ce;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0_ignore_call106;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1_ignore_call106;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2_ignore_call106;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3_ignore_call106;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp108;
    sc_signal< sc_lv<5> > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_return;
    sc_signal< sc_logic > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_ce;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0_ignore_call109;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1_ignore_call109;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2_ignore_call109;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3_ignore_call109;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp109;
    sc_signal< sc_lv<5> > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_return;
    sc_signal< sc_logic > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_ce;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0_ignore_call112;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1_ignore_call112;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2_ignore_call112;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3_ignore_call112;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp110;
    sc_signal< sc_lv<5> > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_return;
    sc_signal< sc_logic > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_ce;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0_ignore_call113;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1_ignore_call113;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2_ignore_call113;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3_ignore_call113;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp111;
    sc_signal< sc_lv<5> > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_return;
    sc_signal< sc_logic > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_ce;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0_ignore_call114;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1_ignore_call114;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2_ignore_call114;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3_ignore_call114;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp112;
    sc_signal< sc_lv<5> > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_return;
    sc_signal< sc_logic > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_ce;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0_ignore_call115;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1_ignore_call115;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2_ignore_call115;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3_ignore_call115;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp113;
    sc_signal< sc_lv<5> > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_return;
    sc_signal< sc_logic > grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_ce;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0_ignore_call116;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1_ignore_call116;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2_ignore_call116;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3_ignore_call116;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp114;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<7> > res_2_V_write_assign_fu_1058_p3;
    sc_signal< sc_lv<7> > res_3_V_write_assign_fu_1070_p3;
    sc_signal< sc_lv<7> > res_4_V_write_assign_fu_1082_p3;
    sc_signal< sc_lv<10> > zext_ln728_fu_1066_p1;
    sc_signal< sc_lv<10> > zext_ln728_1_fu_1078_p1;
    sc_signal< sc_lv<10> > zext_ln728_2_fu_1090_p1;
    sc_signal< sc_lv<10> > ap_return_0_preg;
    sc_signal< sc_lv<10> > ap_return_1_preg;
    sc_signal< sc_lv<10> > ap_return_2_preg;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to2;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<10> ap_const_lv10_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp105();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp106();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp107();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp108();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp109();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp110();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp111();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp112();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp113();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp114();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state1_pp0_stage0_iter0_ignore_call101();
    void thread_ap_block_state1_pp0_stage0_iter0_ignore_call102();
    void thread_ap_block_state1_pp0_stage0_iter0_ignore_call103();
    void thread_ap_block_state1_pp0_stage0_iter0_ignore_call106();
    void thread_ap_block_state1_pp0_stage0_iter0_ignore_call109();
    void thread_ap_block_state1_pp0_stage0_iter0_ignore_call112();
    void thread_ap_block_state1_pp0_stage0_iter0_ignore_call113();
    void thread_ap_block_state1_pp0_stage0_iter0_ignore_call114();
    void thread_ap_block_state1_pp0_stage0_iter0_ignore_call115();
    void thread_ap_block_state1_pp0_stage0_iter0_ignore_call116();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state2_pp0_stage0_iter1_ignore_call101();
    void thread_ap_block_state2_pp0_stage0_iter1_ignore_call102();
    void thread_ap_block_state2_pp0_stage0_iter1_ignore_call103();
    void thread_ap_block_state2_pp0_stage0_iter1_ignore_call106();
    void thread_ap_block_state2_pp0_stage0_iter1_ignore_call109();
    void thread_ap_block_state2_pp0_stage0_iter1_ignore_call112();
    void thread_ap_block_state2_pp0_stage0_iter1_ignore_call113();
    void thread_ap_block_state2_pp0_stage0_iter1_ignore_call114();
    void thread_ap_block_state2_pp0_stage0_iter1_ignore_call115();
    void thread_ap_block_state2_pp0_stage0_iter1_ignore_call116();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state3_pp0_stage0_iter2_ignore_call101();
    void thread_ap_block_state3_pp0_stage0_iter2_ignore_call102();
    void thread_ap_block_state3_pp0_stage0_iter2_ignore_call103();
    void thread_ap_block_state3_pp0_stage0_iter2_ignore_call106();
    void thread_ap_block_state3_pp0_stage0_iter2_ignore_call109();
    void thread_ap_block_state3_pp0_stage0_iter2_ignore_call112();
    void thread_ap_block_state3_pp0_stage0_iter2_ignore_call113();
    void thread_ap_block_state3_pp0_stage0_iter2_ignore_call114();
    void thread_ap_block_state3_pp0_stage0_iter2_ignore_call115();
    void thread_ap_block_state3_pp0_stage0_iter2_ignore_call116();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state4_pp0_stage0_iter3_ignore_call101();
    void thread_ap_block_state4_pp0_stage0_iter3_ignore_call102();
    void thread_ap_block_state4_pp0_stage0_iter3_ignore_call103();
    void thread_ap_block_state4_pp0_stage0_iter3_ignore_call106();
    void thread_ap_block_state4_pp0_stage0_iter3_ignore_call109();
    void thread_ap_block_state4_pp0_stage0_iter3_ignore_call112();
    void thread_ap_block_state4_pp0_stage0_iter3_ignore_call113();
    void thread_ap_block_state4_pp0_stage0_iter3_ignore_call114();
    void thread_ap_block_state4_pp0_stage0_iter3_ignore_call115();
    void thread_ap_block_state4_pp0_stage0_iter3_ignore_call116();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to2();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_ce();
    void thread_grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_ce();
    void thread_grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_ce();
    void thread_grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_ce();
    void thread_grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_ce();
    void thread_grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_ce();
    void thread_grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_ce();
    void thread_grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_ce();
    void thread_grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_ce();
    void thread_grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_ce();
    void thread_res_2_V_write_assign_fu_1058_p3();
    void thread_res_3_V_write_assign_fu_1070_p3();
    void thread_res_4_V_write_assign_fu_1082_p3();
    void thread_zext_ln728_1_fu_1078_p1();
    void thread_zext_ln728_2_fu_1090_p1();
    void thread_zext_ln728_fu_1066_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
