-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity global_pooling1d_cl_ap_ufixed_8_0_4_0_0_ap_fixed_16_6_5_3_0_config8_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_10_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_11_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_12_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_13_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_14_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_15_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_16_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_17_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_18_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_19_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_20_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_21_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_22_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_23_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_24_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_25_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_26_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_27_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_28_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_29_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_30_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_31_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_32_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_33_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_34_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_35_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_36_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_37_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_38_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_39_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_40_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_41_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_42_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_43_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_44_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_45_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_46_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_47_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_48_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_49_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_50_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_51_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_52_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_53_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_54_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_55_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_56_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_57_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_58_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_59_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_60_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_61_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_62_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_63_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_64_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_65_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_66_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_67_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_68_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_69_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_70_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_71_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_72_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_73_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_74_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_75_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_76_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_77_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_78_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_79_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_80_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_81_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_82_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_83_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_84_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_85_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_86_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_87_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_88_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_89_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_90_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_91_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_92_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_93_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_94_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_95_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_96_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_97_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_98_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    data_99_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (9 downto 0) );
end;


architecture behav of global_pooling1d_cl_ap_ufixed_8_0_4_0_0_ap_fixed_16_6_5_3_0_config8_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call101 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call101 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call101 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call101 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp105 : BOOLEAN;
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call102 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call102 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call102 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call102 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp106 : BOOLEAN;
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call103 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call103 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call103 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call103 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp107 : BOOLEAN;
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call106 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call106 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call106 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call106 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp108 : BOOLEAN;
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call109 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call109 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call109 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call109 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp109 : BOOLEAN;
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call112 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call112 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call112 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call112 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp110 : BOOLEAN;
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call113 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call113 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call113 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call113 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp111 : BOOLEAN;
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call114 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call114 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call114 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call114 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp112 : BOOLEAN;
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call115 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call115 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call115 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call115 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp113 : BOOLEAN;
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call116 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call116 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call116 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call116 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp114 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal res_2_V_write_assign_fu_1058_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal res_3_V_write_assign_fu_1070_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal res_4_V_write_assign_fu_1082_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln728_fu_1066_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln728_1_fu_1078_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln728_2_fu_1090_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component pool_op_ap_ufixed_8_0_4_0_0_10_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        x_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        x_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        x_3_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        x_4_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        x_5_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        x_6_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        x_7_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        x_8_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        x_9_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818 : component pool_op_ap_ufixed_8_0_4_0_0_10_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_0_V_read => data_0_V_read,
        x_1_V_read => data_10_V_read,
        x_2_V_read => data_20_V_read,
        x_3_V_read => data_30_V_read,
        x_4_V_read => data_40_V_read,
        x_5_V_read => data_50_V_read,
        x_6_V_read => data_60_V_read,
        x_7_V_read => data_70_V_read,
        x_8_V_read => data_80_V_read,
        x_9_V_read => data_90_V_read,
        ap_return => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_return,
        ap_ce => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_ce);

    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842 : component pool_op_ap_ufixed_8_0_4_0_0_10_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_0_V_read => data_1_V_read,
        x_1_V_read => data_11_V_read,
        x_2_V_read => data_21_V_read,
        x_3_V_read => data_31_V_read,
        x_4_V_read => data_41_V_read,
        x_5_V_read => data_51_V_read,
        x_6_V_read => data_61_V_read,
        x_7_V_read => data_71_V_read,
        x_8_V_read => data_81_V_read,
        x_9_V_read => data_91_V_read,
        ap_return => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_return,
        ap_ce => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_ce);

    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866 : component pool_op_ap_ufixed_8_0_4_0_0_10_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_0_V_read => data_2_V_read,
        x_1_V_read => data_12_V_read,
        x_2_V_read => data_22_V_read,
        x_3_V_read => data_32_V_read,
        x_4_V_read => data_42_V_read,
        x_5_V_read => data_52_V_read,
        x_6_V_read => data_62_V_read,
        x_7_V_read => data_72_V_read,
        x_8_V_read => data_82_V_read,
        x_9_V_read => data_92_V_read,
        ap_return => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_return,
        ap_ce => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_ce);

    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890 : component pool_op_ap_ufixed_8_0_4_0_0_10_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_0_V_read => data_3_V_read,
        x_1_V_read => data_13_V_read,
        x_2_V_read => data_23_V_read,
        x_3_V_read => data_33_V_read,
        x_4_V_read => data_43_V_read,
        x_5_V_read => data_53_V_read,
        x_6_V_read => data_63_V_read,
        x_7_V_read => data_73_V_read,
        x_8_V_read => data_83_V_read,
        x_9_V_read => data_93_V_read,
        ap_return => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_return,
        ap_ce => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_ce);

    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914 : component pool_op_ap_ufixed_8_0_4_0_0_10_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_0_V_read => data_4_V_read,
        x_1_V_read => data_14_V_read,
        x_2_V_read => data_24_V_read,
        x_3_V_read => data_34_V_read,
        x_4_V_read => data_44_V_read,
        x_5_V_read => data_54_V_read,
        x_6_V_read => data_64_V_read,
        x_7_V_read => data_74_V_read,
        x_8_V_read => data_84_V_read,
        x_9_V_read => data_94_V_read,
        ap_return => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_return,
        ap_ce => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_ce);

    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938 : component pool_op_ap_ufixed_8_0_4_0_0_10_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_0_V_read => data_5_V_read,
        x_1_V_read => data_15_V_read,
        x_2_V_read => data_25_V_read,
        x_3_V_read => data_35_V_read,
        x_4_V_read => data_45_V_read,
        x_5_V_read => data_55_V_read,
        x_6_V_read => data_65_V_read,
        x_7_V_read => data_75_V_read,
        x_8_V_read => data_85_V_read,
        x_9_V_read => data_95_V_read,
        ap_return => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_return,
        ap_ce => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_ce);

    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962 : component pool_op_ap_ufixed_8_0_4_0_0_10_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_0_V_read => data_6_V_read,
        x_1_V_read => data_16_V_read,
        x_2_V_read => data_26_V_read,
        x_3_V_read => data_36_V_read,
        x_4_V_read => data_46_V_read,
        x_5_V_read => data_56_V_read,
        x_6_V_read => data_66_V_read,
        x_7_V_read => data_76_V_read,
        x_8_V_read => data_86_V_read,
        x_9_V_read => data_96_V_read,
        ap_return => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_return,
        ap_ce => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_ce);

    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986 : component pool_op_ap_ufixed_8_0_4_0_0_10_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_0_V_read => data_7_V_read,
        x_1_V_read => data_17_V_read,
        x_2_V_read => data_27_V_read,
        x_3_V_read => data_37_V_read,
        x_4_V_read => data_47_V_read,
        x_5_V_read => data_57_V_read,
        x_6_V_read => data_67_V_read,
        x_7_V_read => data_77_V_read,
        x_8_V_read => data_87_V_read,
        x_9_V_read => data_97_V_read,
        ap_return => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_return,
        ap_ce => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_ce);

    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010 : component pool_op_ap_ufixed_8_0_4_0_0_10_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_0_V_read => data_8_V_read,
        x_1_V_read => data_18_V_read,
        x_2_V_read => data_28_V_read,
        x_3_V_read => data_38_V_read,
        x_4_V_read => data_48_V_read,
        x_5_V_read => data_58_V_read,
        x_6_V_read => data_68_V_read,
        x_7_V_read => data_78_V_read,
        x_8_V_read => data_88_V_read,
        x_9_V_read => data_98_V_read,
        ap_return => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_return,
        ap_ce => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_ce);

    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034 : component pool_op_ap_ufixed_8_0_4_0_0_10_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_0_V_read => data_9_V_read,
        x_1_V_read => data_19_V_read,
        x_2_V_read => data_29_V_read,
        x_3_V_read => data_39_V_read,
        x_4_V_read => data_49_V_read,
        x_5_V_read => data_59_V_read,
        x_6_V_read => data_69_V_read,
        x_7_V_read => data_79_V_read,
        x_8_V_read => data_89_V_read,
        x_9_V_read => data_99_V_read,
        ap_return => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_return,
        ap_ce => grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg(2) <= '0';
                ap_return_0_preg(3) <= '0';
                ap_return_0_preg(4) <= '0';
                ap_return_0_preg(5) <= '0';
                ap_return_0_preg(6) <= '0';
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                                        ap_return_0_preg(6 downto 2) <= zext_ln728_fu_1066_p1(6 downto 2);
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg(2) <= '0';
                ap_return_1_preg(3) <= '0';
                ap_return_1_preg(4) <= '0';
                ap_return_1_preg(5) <= '0';
                ap_return_1_preg(6) <= '0';
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                                        ap_return_1_preg(6 downto 2) <= zext_ln728_1_fu_1078_p1(6 downto 2);
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg(2) <= '0';
                ap_return_2_preg(3) <= '0';
                ap_return_2_preg(4) <= '0';
                ap_return_2_preg(5) <= '0';
                ap_return_2_preg(6) <= '0';
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                                        ap_return_2_preg(6 downto 2) <= zext_ln728_2_fu_1090_p1(6 downto 2);
                end if; 
            end if;
        end if;
    end process;

    ap_return_0_preg(1 downto 0) <= "00";
    ap_return_0_preg(9 downto 7) <= "000";
    ap_return_1_preg(1 downto 0) <= "00";
    ap_return_1_preg(9 downto 7) <= "000";
    ap_return_2_preg(1 downto 0) <= "00";
    ap_return_2_preg(9 downto 7) <= "000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp105_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp105 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp106_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp106 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp107_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp107 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp108_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp108 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp109_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp109 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp110_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp110 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp111_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp111 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp112_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp112 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp113_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp113 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp114_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp114 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call101_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call101 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call102_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call102 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call103_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call103 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call106_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call106 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call109_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call109 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call112_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call112 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call113_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call113 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call114_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call114 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call115_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call115 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call116_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call116 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call102 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call106 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call109 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call112 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call113 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call114 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call102 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call106 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call109 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call112 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call113 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call114 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call102 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call106 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call109 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call112 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call113 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call114 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to2 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, zext_ln728_fu_1066_p1, ap_return_0_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_return_0 <= zext_ln728_fu_1066_p1;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, zext_ln728_1_fu_1078_p1, ap_return_1_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_return_1 <= zext_ln728_1_fu_1078_p1;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, zext_ln728_2_fu_1090_p1, ap_return_2_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_return_2 <= zext_ln728_2_fu_1090_p1;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp113)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp113) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_ce <= ap_const_logic_1;
        else 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1010_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp114)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp114) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_ce <= ap_const_logic_1;
        else 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_1034_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp105)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp105) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_ce <= ap_const_logic_1;
        else 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_818_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp106)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp106) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_ce <= ap_const_logic_1;
        else 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_842_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp107)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp107) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_ce <= ap_const_logic_1;
        else 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp108)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp108) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_ce <= ap_const_logic_1;
        else 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp109)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp109) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_ce <= ap_const_logic_1;
        else 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp110)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp110) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_ce <= ap_const_logic_1;
        else 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_938_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp111)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp111) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_ce <= ap_const_logic_1;
        else 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_962_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp112)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp112) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_ce <= ap_const_logic_1;
        else 
            grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_986_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    res_2_V_write_assign_fu_1058_p3 <= (grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_866_ap_return & ap_const_lv2_0);
    res_3_V_write_assign_fu_1070_p3 <= (grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_890_ap_return & ap_const_lv2_0);
    res_4_V_write_assign_fu_1082_p3 <= (grp_pool_op_ap_ufixed_8_0_4_0_0_10_1_s_fu_914_ap_return & ap_const_lv2_0);
    zext_ln728_1_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(res_3_V_write_assign_fu_1070_p3),10));
    zext_ln728_2_fu_1090_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(res_4_V_write_assign_fu_1082_p3),10));
    zext_ln728_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(res_2_V_write_assign_fu_1058_p3),10));
end behav;
